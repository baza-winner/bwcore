{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"typ",
				"typeOf\treflect.Type ·ν"
			],
			[
				"prefix",
				"prefixArgs\t[]interface{} ·ν"
			],
			[
				"fmt",
				"fmtArgs\t[]interface{} ·ν"
			],
			[
				"fun",
				"function\tuintptr ·ν"
			],
			[
				"val",
				"ValChecker\tinterface ·ʈ"
			],
			[
				"V",
				"VarValue\tinterface ·ν"
			],
			[
				"Var",
				"VarPathStr\tstring ·ν"
			],
			[
				"type",
				"typedArg\tVarIs ·ν"
			],
			[
				"Mus",
				"MustVarPathFrom\tfunc(s string) VarPath ·ƒ"
			],
			[
				"t",
				"typedArg\tUnicodeCategory ·ν"
			],
			[
				"Ma",
				"MustVarPathFrom\tfunc(s string) VarPath ·ƒ"
			],
			[
				"get",
				"getVarValue\tfunc(varPath VarPath) VarValue ·ƒ"
			],
			[
				"P",
				"RunePtrStructs\t[]RunePtrStruct ·ʈ"
			],
			[
				"Run",
				"RunePtrStruct\tstruct ·ʈ"
			],
			[
				"pre",
				"preLineCount\tint ·ν"
			],
			[
				"pu",
				"pushRune\tfunc() ·ƒ"
			],
			[
				"rune",
				"runePtr\t*rune ·ν"
			],
			[
				"cha",
				"charPtr\t*rune ·ν"
			],
			[
				"string",
				"stringCharProvider\tstruct ·ʈ"
			],
			[
				"item",
				"itemType\tparseStackItemType ·ν"
			],
			[
				"stack",
				"stackSubItem\tparseStackItem ·ν"
			],
			[
				"def",
				"defaultValue\t[]interface{} ·ν"
			],
			[
				"Con",
				"ConfigState\tstruct ·ʈ"
			],
			[
				"A",
				"ArrayOf\tdeftype.Item ·Ɩ"
			],
			[
				"FromS",
				"FromArgs\tfunc(kk ...deftype.Item) deftype.Set ·ƒ"
			],
			[
				"max",
				"maxNumber\t*float64 ·ν"
			],
			[
				"min",
				"minNumber\t*float64 ·ν"
			],
			[
				"From",
				"FromSlice\tfunc(kk []Item) Set ·ƒ"
			],
			[
				"Ar",
				"Array\tdeftype.Item ·Ɩ"
			],
			[
				"limi",
				"limitValue\tinvalid type ·ν"
			],
			[
				"value",
				"valueErrorMake\tfunc(v value, errorType valueErrorType, args ...interface{}) valueError ·ƒ"
			],
			[
				"_mu",
				"_mustBeInt64\tfunc(v interface{}) int64 ·ƒ"
			],
			[
				"Arr",
				"ArrayOf\tdeftype.Item ·Ɩ"
			],
			[
				"elemVal",
				"elemValIntf\tinterface ·ν"
			],
			[
				"Item_",
				"Item_below_\tdeftype.Item ·Ɩ"
			],
			[
				"valKe",
				"valKeyValIntf\tinterface ·ν"
			],
			[
				"co",
				"compileDefResult\t*Def ·ν"
			],
			[
				"Flo",
				"Float64\treflect.Kind ·Ɩ"
			],
			[
				"MaxInt",
				"MaxInt64\tint64 ·Ɩ"
			],
			[
				"Ui",
				"Uint32\treflect.Kind ·Ɩ"
			],
			[
				"Uint",
				"Uint16\treflect.Kind ·Ɩ"
			],
			[
				"U",
				"Uint8\treflect.Kind ·Ɩ"
			],
			[
				"valu",
				"valueErrorMake\tfunc(v value, errorType valueErrorType, args ...interface{}) valueError ·ƒ"
			],
			[
				"Pre",
				"PrettyJson\tfunc(v interface{}) string ·ƒ"
			],
			[
				"Pr",
				"PrettyJson\tfunc(v interface{}) string ·ƒ"
			],
			[
				"_mus",
				"_mustBeString\tfunc(v interface{}) string ·ƒ"
			],
			[
				"fm",
				"fmtString\tstring ·ν"
			],
			[
				"ofType",
				"ofTypeStrings\t[]string ·ν"
			],
			[
				"ofTy",
				"ofTypeArray\t[]string ·ν"
			],
			[
				"default",
				"defaultValueIntf\tinterface ·ν"
			],
			[
				"errHa",
				"errHasUnexpectedKeys\tfunc(unexpectedKeys []string) ·ƒ"
			],
			[
				"valueha",
				"valueHasUnexpectedKeysError\tvalueError ·Ɩ"
			],
			[
				"defKeys",
				"defKeysKey\tstring ·ν"
			],
			[
				"va",
				"valMap\tmap[string]interface{} ·ν"
			],
			[
				"where",
				"whereVal\tstring ·ν"
			],
			[
				"int",
				"interface"
			],
			[
				"defKey",
				"defKeysKeyValue"
			],
			[
				"some",
				"somewhere"
			],
			[
				"vali",
				"validateType"
			],
			[
				"exp",
				"expectedKeys"
			],
			[
				"whe",
				"whereStruct"
			],
			[
				"valid",
				"validFields"
			],
			[
				"keyValue",
				"keyValueType"
			],
			[
				"wher",
				"where"
			],
			[
				"is",
				"isRequired"
			],
			[
				"_get",
				"_getValidatedTypeValueOfHashKey"
			],
			[
				"sca",
				"scalar"
			],
			[
				"sub",
				"subType"
			],
			[
				"ex",
				"expectedTypes"
			],
			[
				"exis",
				"exists"
			],
			[
				"su",
				"suffix"
			],
			[
				"str",
				"structValue"
			],
			[
				"exi",
				"exists"
			],
			[
				"exit",
				"exitOnError"
			],
			[
				"all",
				"allSeparate"
			],
			[
				"el",
				"elsif"
			],
			[
				"array",
				"arrayItem"
			],
			[
				"ar",
				"array"
			],
			[
				"no",
				"normalize"
			],
			[
				"arr",
				"arrayItem"
			],
			[
				"forc",
				"forceRecreate"
			],
			[
				"dockerIma",
				"dockerImageName"
			],
			[
				"ngi",
				"nginx"
			],
			[
				"temp",
				"templateFileSpec"
			],
			[
				"var",
				"varSubstSub"
			],
			[
				"commen",
				"commentSuffix"
			],
			[
				"sep",
				"separatorLine"
			],
			[
				"git",
				"gitignore"
			],
			[
				"ima",
				"imageId"
			],
			[
				"et",
				"etaImageId"
			],
			[
				"err",
				"errorCode"
			],
			[
				"retu",
				"returnCode"
			],
			[
				"por",
				"portNameByValue"
			],
			[
				"bas",
				"basePorts"
			],
			[
				"ke",
				"camelCaseToKebabCase"
			],
			[
				"by",
				"byName"
			],
			[
				"op",
				"options"
			],
			[
				"opt",
				"optName"
			],
			[
				"en",
				"entityName"
			],
			[
				"_de",
				"_debugVar"
			],
			[
				"_sho",
				"_shortenFileSpec"
			],
			[
				"forceRecreateA",
				"forceRecreateAndCleanMappedVolumesDef"
			],
			[
				"_is",
				"_isInDocker"
			],
			[
				"BW_",
				"BW_SELF_UPDATE_SOURCE"
			],
			[
				"_bwPro",
				"_bwProjShortcut"
			],
			[
				"баз",
				"базовых"
			],
			[
				"см",
				"смещение"
			],
			[
				"proj",
				"projShortcut"
			],
			[
				"projSh",
				"projShortcut"
			],
			[
				"OPT_",
				"OPT_uninstall"
			],
			[
				"gitO",
				"gitOriginHolder"
			],
			[
				"projD",
				"projDir"
			],
			[
				"prof",
				"profileLineRegExp"
			],
			[
				"perl",
				"perlCode"
			],
			[
				"pe",
				"perlCode"
			],
			[
				"new",
				"newFileSpec"
			],
			[
				"_profile",
				"_profileFileSpec"
			],
			[
				"projDi",
				"projDirHolder"
			],
			[
				"dst",
				"dstVarName"
			],
			[
				"__OPT",
				"__OPTNAME_"
			],
			[
				"__thisF",
				"__thisFuncCommand"
			],
			[
				"_thisF",
				"__thisFuncCommand"
			],
			[
				"_this",
				"__thisFuncCommand"
			],
			[
				"__this",
				"__thisFuncCommand"
			],
			[
				"_code",
				"_codeToCallFuncParams2"
			],
			[
				"add",
				"additionalSuffix"
			],
			[
				"__fu",
				"__funcName"
			],
			[
				"eta",
				"etaValue"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"git",
				"Git: Status"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"gi",
				"Git: Status"
			],
			[
				"g",
				"Git: Status"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"git:st",
				"Git: Status"
			],
			[
				"git:s",
				"Git: Status"
			],
			[
				"git:",
				"Git: Status"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"gitst",
				"Git: Status"
			],
			[
				"gits",
				"Git: Status"
			],
			[
				"git:sta",
				"Git: Status"
			],
			[
				"git bla",
				"Git: Blame"
			],
			[
				"git:stat",
				"Git: Status"
			],
			[
				"git: st",
				"Git: Status"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"sublimelinter setting",
				"Preferences: SublimeLinter Settings – User"
			],
			[
				"vintage",
				"Package Control: Advanced Install Package"
			],
			[
				":w",
				":w - Save"
			]
		],
		"width": 428.0
	},
	"console":
	{
		"height": 150.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore"
	],
	"file_history":
	[
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/bwtesting/bwtesting.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defvalid/def.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defparse/defparse_logic.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defvalid/compiledef.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defvalid/defvalid_error.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defvalid/defvalid_test.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defvalid/defvalid_value.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/bwerror/bwerror.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/ansi/ansi.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/bwset/bwset.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defparse/pfa_item_methods.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defparse/defparse_test.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defparse/pfa.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defparse/pfa_state_methods.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defparse/internal/pfa/pfa_errors.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defparse/defparse.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defparse/internal/pfa/pfa_item_methods.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defparse/internal/pfa/pfa_state_methods.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defparse/internal/pfa/pfa.go",
		"/Users/yurybikuzin/Library/Application Support/Sublime Text 3/Packages/User/GoSublime/src/margo/margo.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/test.sh",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defparse/parsestackitem.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defparse/pfaerrortype_string.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defparse/pfa_errors.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defparse/parsestate.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defparse/parsestackitemtype.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defparse/parsestack.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/bwint/bwint.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defvalid/deftype/deftype.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/bwmap/bwmap.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/bwjson/bwjson.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/bwjson/bwjson_test.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defvalid/defvalid.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defvalid/defvalid_init.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defvalid/getvalidval.go",
		"/Users/yurybikuzin/Library/Application Support/Sublime Text 3/Packages/GoSublime/CHANGELOG.md",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defvalid/deftype.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/bwmap/bwmap_test.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defvalid/defvalid_errors.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/bwexec/bwexectesthelper2/bwexectesthelper2.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/bwtesting/bwtesting_test.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/ansi/ansi_test.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/bwerror/bwerror_test.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/bwexec/bwexectesthelper/bwexectesthelper.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/bwos/bwos.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/bwstring/bwstring.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/bwexec/bwexec.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/bwexec/bwexec_test.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/bwstring/bwstring_test.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bwcore/defvalid/value.go",
		"/Users/yurybikuzin/bw/pm/BwAnsi.pm",
		"/Users/yurybikuzin/bw/go/bin/bwexectesthelper",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defvalid/defvalid_test.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparse/defparse_test.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparse/pfa_state_methods.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/core/core_test.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/core/core.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defvalid/defvalid.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparse/pfa.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparse/pfa_item_methods.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/bwtesting/bwtesting.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparse/defparse.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparse/parseprimarystate_string.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparse/parsesecondarystate_string.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparse/parsestack.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparse/parsestackitem.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparse/parsestackitemtype.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparse/parsestackitemtype_string.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparse/parsestate.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparse/parsetertiarystate_string.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparse/pfa_errors.go",
		"/Users/yurybikuzin/bw/go/.gitignore",
		"/Users/yurybikuzin/bw/go/src/.gitignore",
		"/Users/yurybikuzin/bw/go/src/github.com/.gitignore",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparser/defparser_test.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparser/pfa_errors.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparser/pfa_item_methods.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparser/pfa_state_methods.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparser/parsestackitemtype_string.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/ansi/ansi.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/bwcoretestinghelper2/bwcoretestinghelper2.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/bwcoretestinghelper/bwcoretestinghelper.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/ansi/ansi_test.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparser/parsestackitem.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparser/pfa.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparser/parsestate.go",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/defparser/defparser.go",
		"/Users/yurybikuzin/bw/pm/BwProject/v1.pm",
		"/Users/yurybikuzin/bw/core/coreUtils.bash",
		"/Users/yurybikuzin/bw/core/coreFileUtils.bash",
		"/Users/yurybikuzin/bw/pm/BwParams.pm",
		"/Users/yurybikuzin/bw/bash/bwCommands.bash",
		"/Users/yurybikuzin/dip2/bin/dip.pl",
		"/Users/yurybikuzin/dip2/bin/dip.go",
		"/Users/yurybikuzin/.bash_profile",
		"/Users/yurybikuzin/bw/core/funcParamsSupport2.bash",
		"/Users/yurybikuzin/dip2/bin/dip.bash",
		"/Users/yurybikuzin/bw/pm/Bw.pm",
		"/Users/yurybikuzin/bw/pm/BwCore.pm",
		"/Users/yurybikuzin/bw/bash/_docker_up.awk",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/bwcoretesting/bwcoretesting.go",
		"/Users/yurybikuzin/bw/go/bin/bwcoretesting",
		"/Users/yurybikuzin/bw/go/src/github.com/baza-winner/bw/testing/testing.go",
		"/Users/yurybikuzin/bw/go/src/github.com/bw/ansi/ansi.go",
		"/Users/yurybikuzin/bw/go/src/ansi/ansi_test.go",
		"/Users/yurybikuzin/bw/go/src/ansi/ansi.go",
		"/Users/yurybikuzin/bw/go/ansi/ansi.go",
		"/Users/yurybikuzin/bw/go/ansi.go",
		"/Users/yurybikuzin/Library/Application Support/Sublime Text 3/Packages/GoSublime/9o.md",
		"/Users/yurybikuzin/bw/bw.bash",
		"/Users/yurybikuzin/bw/docker/helper/docker-compose.main.yml",
		"/Users/yurybikuzin/bw/docker/helper/docker-compose.nginx.yml",
		"/Users/yurybikuzin/bw/docker/helper/docker-compose.mysql.yml",
		"/Users/yurybikuzin/bw/bash/bashProfileSupport.bash",
		"/Users/yurybikuzin/bw/generated/_docker_up.funcParams.code.bash",
		"/Users/yurybikuzin/bw/bash/_setAtBashProfileHelper.awk",
		"/Users/yurybikuzin/bw/bash/bwMain.bash",
		"/Users/yurybikuzin/bw/tests/funcParamsSupport2Tests.bash",
		"/Users/yurybikuzin/bw/docker/helper/mysql_secure_installation.sql",
		"/Users/yurybikuzin/bw/core/funcOptionsSupport2.bash",
		"/Users/yurybikuzin/bw/.bw/bash/psSupport.bash",
		"/Users/yurybikuzin/bw/docker/helper/entrypoint.bash",
		"/Users/yurybikuzin/bw/core/_mkFileFromTemplate.awk",
		"/Users/yurybikuzin/bw/README.md",
		"/Users/yurybikuzin/bw/generated/_setAtBashProfile.funcParams.code.bash",
		"/Users/yurybikuzin/bw/generated/dip_docker_up.help.code.bash",
		"/Users/yurybikuzin/bw/core/bwMain.bash",
		"/Users/yurybikuzin/bw/generated/bw_project.help.code.bash"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"Where",
			"\n\t",
			"StringSet",
			"enum",
			"SetTest"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"String",
			"Test"
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		},
		{
			"sheets":
			[
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			],
			[
				2,
				0,
				3,
				1
			]
		],
		"cols":
		[
			0.0,
			0.33,
			0.733461785931,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 100.0
	},
	"pinned_build_system": "",
	"project": "bwcore.sublime-project",
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"bwtest",
				"bwtesting/bwtesting.go"
			],
			[
				"ansi",
				"ansi/ansi.go"
			],
			[
				"bwerr",
				"bwerror/bwerror.go"
			],
			[
				"def.",
				"defvalid/def.go"
			],
			[
				"bwset",
				"bwset/bwset.go"
			],
			[
				"pfa",
				"pfa/pfa.go"
			],
			[
				"pfa.g",
				"pfa/pfa.go"
			],
			[
				"pfa_a",
				"pfa/pfa_actions.go"
			],
			[
				"pfa_te",
				"pfa/pfa_test.go"
			],
			[
				"rune",
				"runeprovider/runeprovider.go"
			],
			[
				"pfa.",
				"pfa/pfa.go"
			],
			[
				"def",
				"defparse/defparse_logic.go"
			],
			[
				"pfa_",
				"pfa_state_methods.go"
			],
			[
				"defpa",
				"defparse_test.go"
			],
			[
				"pfa_it",
				"pfa_item_methods.go"
			],
			[
				"pfa.go",
				"pfa.go"
			],
			[
				"pfa_er",
				"go/src/github.com/baza-winner/bwcore/defparse/pfa_errors.go"
			],
			[
				"pfa_i",
				"go/src/github.com/baza-winner/bwcore/defparse/pfa_item_methods.go"
			],
			[
				"pfa_s",
				"go/src/github.com/baza-winner/bwcore/defparse/internal/pfa/pfa_state_methods.go"
			],
			[
				"pfa_e",
				"go/src/github.com/baza-winner/bwcore/defparse/internal/pfa/pfa_errors.go"
			],
			[
				"parsesta",
				"go/src/github.com/baza-winner/bwcore/defparse/parsestackitemtype.go"
			],
			[
				"parsest",
				"go/src/github.com/baza-winner/bwcore/defparse/parsestate.go"
			],
			[
				"parse",
				"go/src/github.com/baza-winner/bwcore/defparse/parsestack.go"
			],
			[
				"pfa_st",
				"go/src/github.com/baza-winner/bwcore/defparse/pfa_state_methods.go"
			],
			[
				"test.",
				"go/src/github.com/baza-winner/bwcore/test.sh"
			],
			[
				"defva",
				"go/src/github.com/baza-winner/bwcore/defvalid/defvalid_test.go"
			],
			[
				"stack",
				"go/src/github.com/baza-winner/bwcore/defparse/parsestackitem.go"
			],
			[
				"defpar",
				"go/src/github.com/baza-winner/bwcore/defparse/defparse_test.go"
			],
			[
				"pfa_ite",
				"go/src/github.com/baza-winner/bwcore/defparse/pfa_item_methods.go"
			],
			[
				"state",
				"go/src/github.com/baza-winner/bwcore/defparse/pfa_state_methods.go"
			],
			[
				"pfa_err",
				"go/src/github.com/baza-winner/bwcore/defparse/pfa_errors.go"
			],
			[
				"pfa_item",
				"go/src/github.com/baza-winner/bwcore/defparse/pfa_item_methods.go"
			],
			[
				"deftype",
				"go/src/github.com/baza-winner/bwcore/defvalid/deftype/deftype.go"
			],
			[
				"comp",
				"go/src/github.com/baza-winner/bwcore/defvalid/compiledef.go"
			],
			[
				"bwtestg",
				"go/src/github.com/baza-winner/bwcore/bwtesting/bwtesting.go"
			],
			[
				"compile",
				"go/src/github.com/baza-winner/bwcore/defvalid/compiledef.go"
			],
			[
				"defval",
				"go/src/github.com/baza-winner/bwcore/defvalid/defvalid_test.go"
			],
			[
				"defvalid_v",
				"go/src/github.com/baza-winner/bwcore/defvalid/defvalid_value.go"
			],
			[
				"defvali",
				"go/src/github.com/baza-winner/bwcore/defvalid/defvalid.go"
			],
			[
				"defv",
				"go/src/github.com/baza-winner/bwcore/defvalid/defvalid.go"
			],
			[
				"bwtes",
				"go/src/github.com/baza-winner/bwcore/bwtesting/bwtesting.go"
			],
			[
				"getva",
				"go/src/github.com/baza-winner/bwcore/defvalid/getvalidval.go"
			],
			[
				"bwint",
				"go/src/github.com/baza-winner/bwcore/bwint/bwint.go"
			],
			[
				"valid",
				"go/src/github.com/baza-winner/bwcore/defvalid/getvalidval.go"
			],
			[
				"deftyp",
				"go/src/github.com/baza-winner/bwcore/defvalid/deftype/deftype.go"
			],
			[
				"bwmap",
				"go/src/github.com/baza-winner/bwcore/bwmap/bwmap.go"
			],
			[
				"compli",
				"go/src/github.com/baza-winner/bwcore/defvalid/compiledef.go"
			],
			[
				"bwtestin",
				"go/src/github.com/baza-winner/bwcore/bwtesting/bwtesting.go"
			],
			[
				"defvalid_te",
				"go/src/github.com/baza-winner/bwcore/defvalid/defvalid_test.go"
			],
			[
				"pfa_metho",
				"go/src/github.com/baza-winner/bwcore/defparse/pfa_item_methods.go"
			],
			[
				"parsestackit",
				"go/src/github.com/baza-winner/bwcore/defparse/parsestackitemtype.go"
			],
			[
				"parseit",
				"go/src/github.com/baza-winner/bwcore/defparse/parsestackitem.go"
			],
			[
				"bwjsonte",
				"go/src/github.com/baza-winner/bwcore/bwjson/bwjson_test.go"
			],
			[
				"bwjson",
				"go/src/github.com/baza-winner/bwcore/bwjson/bwjson.go"
			],
			[
				"bwerror",
				"go/src/github.com/baza-winner/bwcore/bwerror/bwerror.go"
			],
			[
				"bwtesting",
				"go/src/github.com/baza-winner/bwcore/bwtesting/bwtesting.go"
			],
			[
				"bwmapte",
				"go/src/github.com/baza-winner/bwcore/bwmap/bwmap_test.go"
			],
			[
				"pfa_sta",
				"go/src/github.com/baza-winner/bwcore/defparse/pfa_state_methods.go"
			],
			[
				"bwmap_te",
				"go/src/github.com/baza-winner/bwcore/bwmap/bwmap_test.go"
			],
			[
				"bwstr",
				"go/src/github.com/baza-winner/bwcore/bwstring/bwstring.go"
			],
			[
				"bwos",
				"go/src/github.com/baza-winner/bwcore/bwos/bwos.go"
			],
			[
				"ansi.go",
				"go/src/github.com/baza-winner/bwcore/ansi/ansi.go"
			],
			[
				"bwexe",
				"go/src/github.com/baza-winner/bwcore/bwexec/bwexectesthelper2/bwexectesthelper2.go"
			],
			[
				"bwexec",
				"go/src/github.com/baza-winner/bwcore/bwexec/bwexectesthelper/bwexectesthelper.go"
			],
			[
				"bwna",
				"pm/BwAnsi.pm"
			],
			[
				"bwex",
				"go/src/github.com/baza-winner/bwcore/bwexec/bwexec.go"
			],
			[
				"bwstring",
				"go/src/github.com/baza-winner/bwcore/bwstring/bwstring.go"
			],
			[
				"bwmap_t",
				"go/src/github.com/baza-winner/bwcore/bwmap/bwmap_test.go"
			],
			[
				"ansi_",
				"go/src/github.com/baza-winner/bwcore/ansi/ansi_test.go"
			],
			[
				"bwero",
				"go/src/github.com/baza-winner/bwcore/bwerror/bwerror.go"
			],
			[
				"test.sh",
				"go/src/github.com/baza-winner/bwcore/test.sh"
			],
			[
				"bwstrin",
				"go/src/github.com/baza-winner/bwcore/bwstring/bwstring_test.go"
			],
			[
				"defp",
				"go/src/github.com/baza-winner/bwcore/defparse/defparse.go"
			],
			[
				"bwjso",
				"go/src/github.com/baza-winner/bwcore/bwjson/bwjson.go"
			],
			[
				"bwtesit",
				"go/src/github.com/baza-winner/bwcore/bwtesting/bwtesting.go"
			],
			[
				"bwexectes",
				"go/src/github.com/baza-winner/bwcore/bwexec/bwexectesthelper/bwexectesthelper.go"
			],
			[
				"core.",
				"go/src/github.com/baza-winner/bw/core/core.go"
			],
			[
				"core_te",
				"go/src/github.com/baza-winner/bw/core/core_test.go"
			],
			[
				"go/src/github",
				"go/src/github.com/.gitignore"
			],
			[
				"go/src",
				"go/src/.gitignore"
			],
			[
				"go/.gi",
				"go/.gitignore"
			],
			[
				"core_tes",
				"go/src/github.com/baza-winner/bw/core/core_test.go"
			],
			[
				"ansi_te",
				"go/src/github.com/baza-winner/bw/ansi/ansi_test.go"
			],
			[
				"pfa_state_",
				"go/src/github.com/baza-winner/bw/defparser/pfa_state_methods.go"
			],
			[
				"parsestackitemtype_string.go",
				"go/src/github.com/baza-winner/bw/defparser/parsestackitemtype_string.go"
			],
			[
				".git",
				"go/.gitignore"
			],
			[
				"bwcore",
				"go/src/github.com/baza-winner/bw/bwcoretestinghelper/bwcoretestinghelper.go"
			],
			[
				"bwCore",
				"go/src/github.com/baza-winner/bw/bwcoretesting/bwcoretesting.go"
			],
			[
				"docker_up",
				"bash/_docker_up.awk"
			],
			[
				"coreFile",
				"core/coreFileUtils.bash"
			],
			[
				"bwCom",
				"bash/bwCommands.bash"
			],
			[
				"BwAn",
				"pm/BwAnsi.pm"
			],
			[
				"coreFil",
				"core/coreFileUtils.bash"
			],
			[
				"Bw",
				"pm/Bw.pm"
			],
			[
				"bwCo",
				"bash/bwCommands.bash"
			],
			[
				"core",
				"core/coreUtils.bash"
			],
			[
				"BwCor",
				"pm/BwCore.pm"
			],
			[
				"func",
				"core/funcParamsSupport2.bash"
			],
			[
				"BwP",
				"pm/BwParams.pm"
			],
			[
				"bwP",
				"pm/BwParams.pm"
			],
			[
				"docker",
				"docker/helper/docker-compose.nginx.yml"
			],
			[
				"docker-comp",
				"docker/helper/docker-compose.main.yml"
			],
			[
				".sql",
				"docker/helper/mysql_secure_installation.sql"
			],
			[
				"_setB",
				"bash/_setAtBashProfileHelper.awk"
			],
			[
				"_mk",
				"core/_mkFileFromTemplate.awk"
			],
			[
				"_docker_up",
				"bash/_docker_up.awk"
			],
			[
				"dip_docker_up.h",
				"generated/dip_docker_up.help.code.bash"
			],
			[
				"bashPro",
				"bash/bashProfileSupport.bash"
			],
			[
				"bwMain",
				"bash/bwMain.bash"
			],
			[
				"bwC",
				"bash/bwCommands.bash"
			],
			[
				"_docker_up.fun",
				"generated/_docker_up.funcParams.code.bash"
			],
			[
				"REA",
				"README.md"
			],
			[
				"_set",
				"bash/_setAtBashProfileHelper.awk"
			],
			[
				"bash",
				"bash/bashProfileSupport.bash"
			],
			[
				"bw",
				"bw.bash"
			],
			[
				"file",
				"core/coreFileUtils.bash"
			],
			[
				"ent",
				"docker/helper/entrypoint.bash"
			],
			[
				"bwM",
				"core/bwMain.bash"
			],
			[
				"bw_proj",
				"generated/bw_project.help.code.bash"
			],
			[
				"fun",
				"core/funcParamsSupport2.bash"
			],
			[
				"bw_proje",
				"generated/bw_project.help.code.bash"
			],
			[
				"funcP",
				"core/funcParamsSupport2.bash"
			],
			[
				"test",
				"tests/testsSupport.bash"
			],
			[
				"profile",
				"bash/profileSupport.bash"
			],
			[
				"bwcom",
				"bash/bwCommands.bash"
			],
			[
				"bw_pro",
				"generated/bw_project.funcParams.code.bash"
			],
			[
				"bw.",
				"bw.bash"
			],
			[
				"api",
				"bin/api"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 2,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 83.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
